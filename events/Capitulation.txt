###########################
# Capitulation Events
###########################

add_namespace = capt
### French Capitulation

# The Commune of France capitulates
country_event = {
	id = capt.40
	title = capt.40.t
	desc = capt.40.d
	picture = GFX_report_event_GER_weeping

	fire_only_once = yes

	trigger = {
		tag = FRA
		has_capitulated = yes
		has_war = yes
		is_in_faction = yes
		NOT = { controls_state = 16 } #Paris
		NOT = { has_global_flag = FRA_capitulated }
	}

	mean_time_to_happen = {
		days = 5
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event capt.40"
		hidden_effect = {
			set_global_flag = FRA_capitulated
			every_owned_state = {
				limit = {
					NOT = { is_controlled_by = FRA }
				}
				controller = {
					set_state_controller = PREV
				}
			}
			every_other_country = {
				limit = {
					NOT = {
						tag = GER
						tag = NFA
					}
					OR = {
						is_in_faction_with = GER
						is_in_faction_with = NFA
					}
					any_state = {
						is_owned_by = FRA
						is_controlled_by = PREV
						is_owned_by = FRA
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_PREV = no
						OR = {
							is_coastal = yes
							AND = {
								any_neighbor_state = { is_controlled_by = GER }
								PREV = { is_in_faction_with = GER }
							}
							AND = {
								any_neighbor_state = { is_controlled_by = NFA }
								PREV = { is_in_faction_with = NFA }
							}
						}
					}
				}
				country_event = capt.41
			}
		}
	}


	option = {
		name = capt.40.a
	}
}

# Reichspakt and Entente members asked to turn over control
country_event = {
	id = capt.41
	immediate = { log = "[GetDateText]: [Root.GetName]: event capt.41" }
	title = capt.41.t
	picture = GFX_report_event_GER_weeping

	desc = {
		text = capt.41.d.ger
		trigger = { is_in_faction_with = GER }
	}
	desc = {
		text = capt.41.d.nfa
		trigger = { is_in_faction_with = NFA }
	}

	is_triggered_only = yes

	trigger = {
		OR = {
			is_in_faction_with = GER
			is_in_faction_with = NFA
		}
		FRA = {
			any_owned_state = {
				is_controlled_by = ROOT
				is_core_of = FRA
				is_claim_or_core_or_ambition_of_ROOT = no
			}
		}
	}

	option = {
		name = capt.41.a #Yes, of course we shall
		if = {
			limit = { is_in_faction_with = GER }
			FRA = {
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						OR = {
							is_coastal = yes
							any_neighbor_state = { is_controlled_by = GER }
						}
					}
					GER = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = GER }
					}
					GER = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = GER }
					}
					GER = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = GER }
					}
					GER = { set_state_controller = PREV }
				}
			}
		}
		else_if = {
			limit = { is_in_faction_with = NFA }
			FRA = {
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						OR = {
							is_coastal = yes
							any_neighbor_state = { is_controlled_by = NFA }
						}
					}
					NFA = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = NFA }
					}
					NFA = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = NFA }
					}
					NFA = { set_state_controller = PREV }
				}
				every_owned_state = {
					limit = {
						is_controlled_by = ROOT
						is_core_of = FRA
						is_claim_or_core_or_ambition_of_ROOT = no
						any_neighbor_state = { is_controlled_by = NFA }
					}
					NFA = { set_state_controller = PREV }
				}
			}
		}
	}
	option = {
		name = capt.41.b #No, we'll keep what we're occupying
		trigger = { is_ai = no }
	}
}

# French resistance collapses
country_event = {
	id = capt.42
	title = capt.42.t
	desc = capt.42.d
	picture = GFX_report_event_GER_weeping

	fire_only_once = yes

	trigger = {
		tag = FRA
		has_capitulated = yes
		is_government_in_exile = yes
		NOT = { has_legitimacy > 20 }
	}

	mean_time_to_happen = {
		days = 10
	}

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event capt.42"
		hidden_effect = {
			if = {
				limit = {
					is_faction_leader = yes
					ENG = {
						is_in_faction_with = FRA
						has_capitulated = no
					}
				}
				ENG = { set_faction_leader = yes }
			}
			else_if = {
				limit = {
					is_faction_leader = yes
					SOV = {
						is_in_faction_with = FRA
						has_capitulated = no
					}
				}
				SOV = { set_faction_leader = yes }
			}
			else_if = {
				limit = {
					is_faction_leader = yes
					any_country = {
						is_actual_major = yes
						is_in_faction_with = FRA
						has_capitulated = no
					}
				}
				random_country = {
					limit = {
						is_actual_major = yes
						is_in_faction_with = FRA
						has_capitulated = no
					}
					set_faction_leader = yes
				}
			}
		}
	}

	option = {
		name = capt.42.a
		every_other_country = {
			limit = {
				is_in_faction_with = FRA
				has_capitulated = yes
				OR = {
					NOT = {
						is_government_in_exile = yes
					}
					is_exiled_in = FRA
				}
			}
			leave_faction = yes
		}

		if = {
			limit = { is_faction_leader = yes }
			dismantle_faction = yes
		}
		else = {
			leave_faction = yes
		}
	}
}

# Germany invites NFA into southern France
country_event = {
	id = capt.43
	title = capt.43.t
	desc = capt.43.d
	picture = GFX_report_event_GER_weeping

	is_triggered_only = yes

	immediate = {
		log = "[GetDateText]: [Root.GetName]: event capt.43"
		hidden_effect = {
			set_variable = { cof_states_given = 0 }
			set_variable = { cof_states_need = 3 }
			FRA = {
				every_owned_state = {
					limit = {
						is_controlled_by = NFA
						is_core_of = FRA
					}
					subtract_from_variable = { var = ROOT.cof_states_need value = 1 }
				}
			}
		}
	}

	option = {
		name = capt.43.a #Agree
		ai_chance = { factor = 80 }
		set_country_flag = NFA_GER_invited_to_france
		# first state transferred
		if = {
			limit = {
				any_state = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = { is_controlled_by = NFA }
					is_coastal = yes
				}
			}
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			random_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = { is_controlled_by = NFA }
					is_coastal = yes
				}
				ROOT = { set_state_controller = PREV }
			}
		}
		else_if = {
			limit = {
				any_state = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = {
						is_controlled_by = NFA
						any_neighbor_state = {
							NOT = { state = PREV.PREV }
							is_controlled_by = NFA
						}
					}
				}
			}
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			random_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = {
						is_controlled_by = NFA
						any_neighbor_state = {
							NOT = { state = PREV.PREV }
							is_controlled_by = NFA
						}
					}
				}
				ROOT = { set_state_controller = PREV }
			}
		}
		else_if = {
			limit = {
				any_state = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = { is_controlled_by = NFA }
				}
			}
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			random_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					any_neighbor_state = { is_controlled_by = NFA }
				}
				ROOT = { set_state_controller = PREV }
			}
		}
		else_if = {
			limit = {
				GER = { controls_state = 21 }
			}
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			set_state_controller = 21
		}
		else_if = {
			limit = {
				any_state = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					is_coastal = yes
				}
			}
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			random_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
					is_coastal = yes
				}
				ROOT = { set_state_controller = PREV }
			}
		}
		else = {
			add_to_variable = { var = ROOT.cof_states_given value = 1 }
			random_state = {
				limit = {
					is_owned_by = FRA
					is_core_of = FRA
					region = 20 #Southern France
					is_controlled_by = GER
				}
				ROOT = { set_state_controller = PREV }
			}
		}

		# second state transferred
		if = {
			limit = {
				check_variable = { ROOT.cof_states_need > 1 }
				check_variable = { ROOT.cof_states_given < ROOT.cof_states_need }
			}
			if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
						is_coastal = yes
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
						is_coastal = yes
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = {
							is_controlled_by = NFA
							any_neighbor_state = {
								NOT = { state = PREV.PREV }
								is_controlled_by = NFA
							}
						}
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = {
							is_controlled_by = NFA
							any_neighbor_state = {
								NOT = { state = PREV.PREV }
								is_controlled_by = NFA
							}
						}
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						is_coastal = yes
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						is_coastal = yes
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
					}
					ROOT = { set_state_controller = PREV }
				}
			}
		}

		# third state transferred
		if = {
			limit = {
				check_variable = { ROOT.cof_states_need > 2 }
				check_variable = { ROOT.cof_states_given < ROOT.cof_states_need }
			}
			if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
						is_coastal = yes
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
						is_coastal = yes
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = {
							is_controlled_by = NFA
							any_neighbor_state = {
								NOT = { state = PREV.PREV }
								is_controlled_by = NFA
							}
						}
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = {
							is_controlled_by = NFA
							any_neighbor_state = {
								NOT = { state = PREV.PREV }
								is_controlled_by = NFA
							}
						}
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						any_neighbor_state = { is_controlled_by = NFA }
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						is_coastal = yes
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
						is_coastal = yes
					}
					ROOT = { set_state_controller = PREV }
				}
			}
			else_if = {
				limit = {
					any_state = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
					}
				}
				add_to_variable = { var = ROOT.cof_states_given value = 1 }
				random_state = {
					limit = {
						is_owned_by = FRA
						is_core_of = FRA
						region = 20 #Southern France
						is_controlled_by = GER
					}
					ROOT = { set_state_controller = PREV }
				}
			}
		}
		clear_variable = cof_states_given
		clear_variable = cof_states_need

		reverse_add_opinion_modifier = { target = GER modifier = KR_approves_of_govt }
		GER = {
			country_event = { id = capt.45 hours = 2 }
		}
	}
	option = {
		name = capt.43.b #Refuse
		ai_chance = { factor = 20 }
		reverse_add_opinion_modifier = { target = GER modifier = KR_disapproves_of_govt }
		GER = {
			country_event = { id = capt.44 days = 2 }
		}
	}
}

# NFA refuses the invitation
country_event = {
	id = capt.44
	immediate = { log = "[GetDateText]: [Root.GetName]: event capt.44" }
	title = capt.44.t
	desc = capt.44.d
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	option = {
		name = capt.44.a
		reverse_add_opinion_modifier = { target = NFA modifier = KR_disapproves_of_govt }
	}
}

# NFA accepts the invitation
country_event = {
	id = capt.45
	immediate = { log = "[GetDateText]: [Root.GetName]: event capt.45" }
	title = capt.45.t
	desc = capt.45.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		name = capt.45.a
		reverse_add_opinion_modifier = { target = NFA modifier = KR_approves_of_govt }
	}
}

